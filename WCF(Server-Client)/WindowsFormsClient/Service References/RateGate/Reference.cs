//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsClient.RateGate {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRatesByRangeDataTable", Namespace="http://schemas.datacontract.org/2004/07/RateServiceDummy")]
    [System.SerializableAttribute()]
    public partial class ExchangeRatesByRangeDataTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTableRow[] rowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTableRow[] rows {
            get {
                return this.rowsField;
            }
            set {
                if ((object.ReferenceEquals(this.rowsField, value) != true)) {
                    this.rowsField = value;
                    this.RaisePropertyChanged("rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRatesByRangeDataTableRow", Namespace="http://schemas.datacontract.org/2004/07/RateServiceDummy")]
    [System.SerializableAttribute()]
    public partial class ExchangeRatesByRangeDataTableRow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ammount {
            get {
                return this.AmmountField;
            }
            set {
                if ((this.AmmountField.Equals(value) != true)) {
                    this.AmmountField = value;
                    this.RaisePropertyChanged("Ammount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Diff {
            get {
                return this.DiffField;
            }
            set {
                if ((this.DiffField.Equals(value) != true)) {
                    this.DiffField = value;
                    this.RaisePropertyChanged("Diff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISO {
            get {
                return this.ISOField;
            }
            set {
                if ((object.ReferenceEquals(this.ISOField, value) != true)) {
                    this.ISOField = value;
                    this.RaisePropertyChanged("ISO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RateDate {
            get {
                return this.RateDateField;
            }
            set {
                if ((this.RateDateField.Equals(value) != true)) {
                    this.RateDateField = value;
                    this.RaisePropertyChanged("RateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.example.com/wcf-service-client/", ConfigurationName="RateGate.RateService")]
    public interface RateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.example.com/wcf-service-client/RateService/ExchangeRatesByDateRangeByI" +
            "SO", ReplyAction="http://www.example.com/wcf-service-client/RateService/ExchangeRatesByDateRangeByI" +
            "SOResponse")]
        WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTable ExchangeRatesByDateRangeByISO(string iso, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.example.com/wcf-service-client/RateService/ISOCodes", ReplyAction="http://www.example.com/wcf-service-client/RateService/ISOCodesResponse")]
        string[] ISOCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.example.com/wcf-service-client/RateService/getExchangeRatesByRangeData" +
            "TableRow", ReplyAction="http://www.example.com/wcf-service-client/RateService/getExchangeRatesByRangeData" +
            "TableRowResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTableRow[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTableRow))]
        object getExchangeRatesByRangeDataTableRow(string iso, System.DateTime from, System.DateTime to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RateServiceChannel : WindowsFormsClient.RateGate.RateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RateServiceClient : System.ServiceModel.ClientBase<WindowsFormsClient.RateGate.RateService>, WindowsFormsClient.RateGate.RateService {
        
        public RateServiceClient() {
        }
        
        public RateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WindowsFormsClient.RateGate.ExchangeRatesByRangeDataTable ExchangeRatesByDateRangeByISO(string iso, System.DateTime from, System.DateTime to) {
            return base.Channel.ExchangeRatesByDateRangeByISO(iso, from, to);
        }
        
        public string[] ISOCodes() {
            return base.Channel.ISOCodes();
        }
        
        public object getExchangeRatesByRangeDataTableRow(string iso, System.DateTime from, System.DateTime to) {
            return base.Channel.getExchangeRatesByRangeDataTableRow(iso, from, to);
        }
    }
}
